import numpy as np
import tensorflow as tf
import joblib

# 1. Load model TFLite
interpreter = tf.lite.Interpreter(model_path="model_klasifikasi.tflite")
interpreter.allocate_tensors()

# 2. Ambil info input dan output
input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()

# 3. Load scaler yang sama dengan waktu training
scaler = joblib.load(r"C:\Users\Aldan\Desktop\ASLClassification\Code\scaler.pkl")

# 4. Siapkan data uji (1 baris data, 63 fitur)
data_uji_rill = np.array([[0.4540621042251587,0.8160659074783325,2.2133980337457615e-07,0.6206904053688049,0.7197402715682983,-0.029628681018948555,0.709321141242981,0.5347669124603271,-0.035017725080251694,0.6559474468231201,0.3727039098739624,-0.044938426464796066,0.5226487517356873,0.3404860198497772,-0.053162842988967896,0.583306610584259,0.4035034775733948,0.01569353975355625,0.5798819065093994,0.23558834195137024,-0.0022592146415263414,0.5822644233703613,0.1375502347946167,-0.021615400910377502,0.5716392993927002,0.042754530906677246,-0.045697201043367386,0.4914165139198303,0.419761598110199,-0.0046654995530843735,0.5434104800224304,0.30783385038375854,-0.06496848911046982,0.5743504762649536,0.438630074262619,-0.09205009788274765,0.5601000785827637,0.4955553412437439,-0.0947839543223381,0.4111969470977783,0.4503728747367859,-0.029412485659122467,0.4726538062095642,0.3639930784702301,-0.11088444292545319,0.5095463991165161,0.5058097243309021,-0.10910776257514954,0.4854702353477478,0.5520482063293457,-0.08444621413946152,0.33219918608665466,0.49192795157432556,-0.0553952232003212,0.4166526198387146,0.41203659772872925,-0.10832775384187698,0.4450799822807312,0.5051716566085815,-0.09019120037555695,0.4075644910335541,0.5410808324813843,-0.0663234293460846]], dtype=np.float32)

# 5. Normalisasi data (pakai .transform() saja!)
data_uji = scaler.transform(data_uji_rill)

# 6. Set input tensor
interpreter.set_tensor(input_details[0]['index'], data_uji)

# 7. Jalankan inferensi
interpreter.invoke()

# 8. Ambil hasil output (probabilitas kelas)
output = interpreter.get_tensor(output_details[0]['index'])
predicted_class = int(np.argmax(output))

print("Kelas hasil prediksi:", predicted_class)